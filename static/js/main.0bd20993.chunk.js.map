{"version":3,"sources":["components/Header/Header.tsx","components/Figure/Figure.tsx","components/WrongLetters/WrongLetters.tsx","components/Word/Word.tsx","components/Notification/Notification.tsx","helpers/helpers.tsx","components/Popup/Popup.tsx","App.tsx","hooks/useWindowSize.tsx","index.tsx"],"names":["Header","HeaderContainer","styled","div","Figure","err","wrongLetters","length","Container","x1","y1","x2","y2","Head","cx","cy","r","Body","Arm","side","Leg","circle","line","WrongLetters","Letters","map","letter","index","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","show","setter","setTimeout","Popup","setPlayable","playAgain","finalMessage","playable","correct","wrong","word","status","forEach","checkWin","useEffect","style","color","onClick","randomWords","App","inputRef","useRef","useState","setCorrectLetters","setWrongLetters","setShowNotification","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","current","focus","handleKeyup","event","key","keyCode","toLowerCase","currentLetters","GameContainer","HiddenInput","type","ref","input","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAWeA,EATA,WACb,OACE,eAACC,EAAD,WACE,oDACA,sDAOAA,EAAkBC,IAAOC,IAAV,0JCsDNC,EAhEA,SAAC,GAAyC,IACjDC,EADgD,EAAtCC,aACSC,OAEzB,OACE,cAACC,EAAD,CAAW,cAAY,WAAvB,SACE,gCAEE,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAK,cAAY,UACnD,sBAAMH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAK,cAAY,UACpD,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAM,cAAY,UACnD,sBAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAM,cAAY,UAEpDP,EAAM,GAAK,cAACQ,EAAD,CAAM,cAAY,OAAOC,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAEvDX,EAAM,GACL,cAACY,EAAD,CAAMR,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAM,cAAY,UAGtDP,EAAM,GACL,cAACa,EAAD,CACET,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHO,KAAK,OACL,cAAY,UAGfd,EAAM,GACL,cAACa,EAAD,CACET,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHO,KAAK,QACL,cAAY,UAIfd,EAAM,GACL,cAACe,EAAD,CACE,cAAY,WACZX,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHO,KAAK,SAGRd,EAAM,GACL,cAACe,EAAD,CACEX,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHO,KAAK,QACL,cAAY,gBAalBX,EAAYN,IAAOC,IAAV,iRAcTU,EAAOX,IAAOmB,OAAV,0BAEJJ,EAAOf,IAAOoB,KAAV,0BAEJJ,EAAMhB,IAAOoB,KAAV,0BAEHF,EAAMlB,IAAOoB,KAAV,0BCjEMC,EArBM,SAAC,GAAyC,IAAvCjB,EAAsC,EAAtCA,aACtB,OACE,cAAC,EAAD,CAAW,cAAY,WAAvB,SACE,eAACkB,EAAD,WACE,8CACClB,EACEmB,KAAI,SAACC,EAAQC,GAAT,OACH,sBAAM,cAAY,QAAlB,SACGD,GAD4BC,MAIhCC,QACC,SAACC,EAAWC,GAAZ,OACW,OAATD,EAAgB,CAACC,GAAQ,CAACD,EAAM,KAAMC,KACxC,YASNtB,EAAYN,IAAOC,IAAV,4ZAuBTqB,EAAUtB,IAAOC,IAAV,0BC/BE4B,EAdF,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,eAC5B,OACE,cAAC,EAAD,CAAW,cAAY,OAAvB,SACGD,EAAaE,MAAM,IAAIT,KAAI,SAACC,EAAQC,GACnC,OACE,sBAAM,cAAY,SAAlB,SACGM,EAAeE,SAAST,GAAUA,EAAS,IADdC,SAWpCnB,EAAYN,IAAOC,IAAV,4dCTAiC,EARM,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,iBACtB,OACE,cAAC,EAAD,CAAW,cAAY,QAAQC,KAAMD,EAArC,SACE,wEAWA7B,EAAYN,IAAOC,IAAV,qbAOA,qBAAGmC,KAAmB,oBAAsB,qBAS1C,qBAAGA,KAAmB,mBAAqB,qBClC/CD,EAAmB,SAC9BE,GAEAA,GAAO,GACPC,YAAW,WACTD,GAAO,KACN,MC6CUE,EAzCD,SAAC,GAMI,IALjBR,EAKgB,EALhBA,eACA3B,EAIgB,EAJhBA,aACA0B,EAGgB,EAHhBA,aACAU,EAEgB,EAFhBA,YACAC,EACgB,EADhBA,UAEIC,EAAe,GACfC,GAAW,EAEf,ODXsB,SAACC,EAAmBC,EAAiBC,GAC3D,IAAIC,EAAS,MAab,OAXAD,EAAKd,MAAM,IAAIgB,SAAQ,SAACxB,GACjBoB,EAAQX,SAAST,KACpBuB,EAAS,OAKQ,IAAjBF,EAAMxC,SACR0C,EAAS,QAGJA,ECHCE,CAASlB,EAAgB3B,EAAc0B,IAC7C,IAAK,MACHY,EAAe,WACfC,GAAW,EACX,MACF,IAAK,OACHD,EAAe,2BACfC,GAAW,EAQf,OAFAO,qBAAU,kBAAMV,EAAYG,MAG1B,cAAC,EAAD,CAAWP,KAAuB,KAAjBM,EAAjB,SACE,gCACE,6BAAKA,KACHC,GACA,8CACe,IACb,sBAAMQ,MAAO,CAAEC,MAAO,WAAtB,SAAoCtB,OAGxC,wBAAQuB,QAASZ,EAAjB,8BAYFnC,EAAYN,IAAOC,IAAV,urBAOF,qBAAGmC,KAAmB,OAAS,U,iBCtD5C,IAAIN,EAAewB,MA2EJC,MAzEf,WACE,IAAMC,EAAWC,iBAAyB,MAC1C,EAAgCC,oBAAkB,GAAlD,mBAAOf,EAAP,KAAiBH,EAAjB,KACA,EAA4CkB,mBAAmB,IAA/D,mBAAO3B,EAAP,KAAuB4B,EAAvB,KACA,EAAwCD,mBAAmB,IAA3D,mBAAOtD,EAAP,KAAqBwD,EAArB,KACA,EAAgDF,oBAAkB,GAAlE,mBAAOvB,EAAP,KAAyB0B,EAAzB,KACA,ECbK,WAGL,MAAoCH,mBAAqB,CACvDI,WAAOC,EACPC,YAAQD,IAFV,mBAAOE,EAAP,KAAmBC,EAAnB,KAoBA,OAhBAhB,qBAAU,WAER,SAASiB,IAEPD,EAAc,CACZJ,MAAOM,OAAOC,WACdL,OAAQI,OAAOE,cAQnB,OAJAF,OAAOG,iBAAiB,SAAUJ,GAElCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIF,EDVWQ,GAAVX,EAAR,EAAQA,MA8CR,OA5CAZ,qBAAU,WAAO,IAAD,EACd,UAAAM,EAASkB,eAAT,SAAkBC,QAElB,IAAMC,EAAc,SAACC,GAEnB,IAAQC,EAAiBD,EAAjBC,IAAKC,EAAYF,EAAZE,QAEb,GAAIpC,GAAYoC,GAAW,IAAMA,GAAW,GAAI,CAC9C,IAAMvD,EAASsD,EAAIE,cAEflD,EAAaG,SAAST,GACnBO,EAAeE,SAAST,GAG3BY,EAAKyB,GAFLF,GAAkB,SAACsB,GAAD,4BAAwBA,GAAxB,CAAwCzD,OAKvDpB,EAAa6B,SAAST,GAGzBY,EAAKyB,GAFLD,GAAgB,SAACqB,GAAD,4BAAwBA,GAAxB,CAAwCzD,SAgBhE,OAPAgC,EAASkB,QAASH,iBAAiB,QAASK,GAG5CR,OAAOG,iBAAiB,SAAS,WAAO,IAAD,EACrC,UAAAf,EAASkB,eAAT,SAAkBC,WAGb,kBAAMnB,EAASkB,QAASF,oBAAoB,QAASI,MAC3D,CAAC7C,EAAgB3B,EAAcuC,EAAUmB,IAU1C,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAACoB,EAAD,WACE,cAAC,EAAD,CAAQ9E,aAAcA,IACtB,cAAC,EAAD,CAAM0B,aAAcA,EAAcC,eAAgBA,IAClD,cAACoD,EAAD,CAAaC,KAAK,OAAOC,IAAK7B,IAC9B,cAAC,EAAD,CAAcpD,aAAcA,OAE9B,cAAC,EAAD,CACE2B,eAAgBA,EAChB3B,aAAcA,EACd0B,aAAcA,EACdU,YAAaA,EACbC,UArBY,WAChBD,GAAY,GACZmB,EAAkB,IAClBC,EAAgB,IAChB9B,EAAewB,SAmBb,cAAC,EAAD,CAAcnB,iBAAkBA,QAOhC7B,EAAYN,IAAOC,IAAV,kKASTiF,EAAgBlF,IAAOC,IAAV,kMAWbkF,EAAcnF,IAAOsF,MAAV,yLExGjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0bd20993.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <h1>Let's play Hangman</h1>\n      <p>Enter a letter...</p>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    margin-bottom: 0;\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\nimport { WrongLettersProps } from \"../../components/WrongLetters/WrongLetters\";\n\nconst Figure = ({ wrongLetters }: WrongLettersProps) => {\n  const err = wrongLetters.length;\n\n  return (\n    <Container data-testid=\"stickman\">\n      <svg>\n        {/* Rod */}\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" data-testid=\"stick\" />\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" data-testid=\"stick\" />\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" data-testid=\"stick\" />\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" data-testid=\"stick\" />\n\n        {err > 0 && <Head data-testid=\"head\" cx=\"140\" cy=\"70\" r=\"20\" />}\n\n        {err > 1 && (\n          <Body x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" data-testid=\"stick\" />\n        )}\n\n        {err > 2 && (\n          <Arm\n            x1=\"140\"\n            y1=\"120\"\n            x2=\"120\"\n            y2=\"100\"\n            side=\"left\"\n            data-testid=\"stick\"\n          />\n        )}\n        {err > 3 && (\n          <Arm\n            x1=\"140\"\n            y1=\"120\"\n            x2=\"160\"\n            y2=\"100\"\n            side=\"right\"\n            data-testid=\"stick\"\n          />\n        )}\n\n        {err > 4 && (\n          <Leg\n            data-testid=\"left-leg\"\n            x1=\"140\"\n            y1=\"150\"\n            x2=\"120\"\n            y2=\"180\"\n            side=\"left\"\n          />\n        )}\n        {err > 5 && (\n          <Leg\n            x1=\"140\"\n            y1=\"150\"\n            x2=\"160\"\n            y2=\"180\"\n            side=\"right\"\n            data-testid=\"stick\"\n          />\n        )}\n      </svg>\n    </Container>\n  );\n};\n\nexport default Figure;\n\ntype LimbsProp = {\n  side: string;\n};\nconst Container = styled.div`\n  svg {\n    height: 250px;\n    width: 200px;\n    fill: transparent;\n    stroke: #fff;\n    stroke-width: 4px;\n    stroke-linecap: round;\n  }\n  @media screen and (max-width: 750px) {\n    display: flex;\n    justify-content: center;\n  }\n`;\nconst Head = styled.circle``;\n\nconst Body = styled.line``;\n\nconst Arm = styled.line<LimbsProp>``;\n\nconst Leg = styled.line<LimbsProp>``;\n","import styled from \"styled-components\";\n\nexport interface WrongLettersProps {\n  wrongLetters: string[];\n}\n\nconst WrongLetters = ({ wrongLetters }: WrongLettersProps) => {\n  return (\n    <Container data-testid=\"wrongbox\">\n      <Letters>\n        <p>Wrong Letters</p>\n        {wrongLetters\n          .map((letter, index) => (\n            <span data-testid=\"wrong\" key={index}>\n              {letter}\n            </span>\n          ))\n          .reduce(\n            (prev: any, curr: JSX.Element) =>\n              prev === null ? [curr] : [prev, \", \", curr],\n            null\n          )}\n      </Letters>\n    </Container>\n  );\n};\n\nexport default WrongLetters;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  padding: 30px;\n  box-shadow: 2px 2px 15px 1px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  flex-direction: column;\n  text-align: right;\n  p {\n    margin: 0 0 5px;\n  }\n  span {\n    font-size: 24px;\n  }\n  @media screen and (max-width: 750px) {\n    position: relative;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst Letters = styled.div``;\n","import styled from \"styled-components\";\n\ninterface WordProps {\n  selectedWord: string;\n  correctLetters: string[];\n}\n\nconst Word = ({ selectedWord, correctLetters }: WordProps) => {\n  return (\n    <Container data-testid=\"word\">\n      {selectedWord.split(\"\").map((letter, index) => {\n        return (\n          <span data-testid=\"letter\" key={index}>\n            {correctLetters.includes(letter) ? letter : \"\"}\n          </span>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Word;\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  span {\n    border-bottom: 3px solid #2980b9;\n    display: inline-flex;\n    font-size: 30px;\n    align-items: center;\n    justify-content: center;\n    margin: 0 3px;\n    height: 50px;\n    width: 20px;\n  }\n  @media screen and (max-width: 750px) {\n    position: relative;\n    justify-content: center;\n    margin-bottom: 30px;\n  }\n`;\n","import styled from \"styled-components\";\n\ninterface IShowNotification {\n  showNotification: boolean;\n}\n\nconst Notification = ({ showNotification }: IShowNotification) => {\n  return (\n    <Container data-testid=\"notif\" show={showNotification}>\n      <p>You have already entered this letter</p>\n    </Container>\n  );\n};\n\nexport default Notification;\n\ntype ContainerProps = {\n  show: boolean;\n};\n\nconst Container = styled.div<ContainerProps>`\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 10px 10px 0 0;\n  padding: 15px 20px;\n  position: absolute;\n  bottom: -50px;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ show }) => (show ? \"translateY(-50px)\" : \"translateY(0px)\")};\n  p {\n    margin: 0;\n  }\n  @media screen and (max-width: 750px) {\n    background-color: rgba(0, 0, 0, 1);\n    bottom: unset;\n    border-radius: 0 0 10px 10px;\n    top: -55px;\n    transform: ${({ show }) => (show ? \"translateY(50px)\" : \"translateY(0px)\")};\n  }\n`;\n","import React from \"react\";\n\nexport const showNotification = (\n  setter: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n};\n\nexport const checkWin = (correct: string[], wrong: string[], word: string) => {\n  let status = \"win\";\n  //check for win\n  word.split(\"\").forEach((letter) => {\n    if (!correct.includes(letter)) {\n      status = \"\";\n    }\n  });\n\n  //check for lose\n  if (wrong.length === 6) {\n    status = \"lose\";\n  }\n\n  return status;\n};\n","import styled from \"styled-components\";\nimport { checkWin } from \"../../helpers/helpers\";\nimport { useEffect } from \"react\";\n\ninterface PopupProps {\n  correctLetters: string[];\n  wrongLetters: string[];\n  selectedWord: string;\n  setPlayable: React.Dispatch<React.SetStateAction<boolean>>;\n  playAgain: () => void;\n}\n\nconst Popup = ({\n  correctLetters,\n  wrongLetters,\n  selectedWord,\n  setPlayable,\n  playAgain,\n}: PopupProps) => {\n  let finalMessage = \"\";\n  let playable = true;\n\n  switch (checkWin(correctLetters, wrongLetters, selectedWord)) {\n    case \"win\":\n      finalMessage = \"Congrats\";\n      playable = false;\n      break;\n    case \"lose\":\n      finalMessage = \"Unfortunately, you lost!\";\n      playable = false;\n      break;\n    default:\n      break;\n  }\n\n  useEffect(() => setPlayable(playable));\n\n  return (\n    <Container show={finalMessage !== \"\"}>\n      <div>\n        <h2>{finalMessage}</h2>\n        {!playable && (\n          <h3>\n            The word was{\" \"}\n            <span style={{ color: \"#272838\" }}>{selectedWord}</span>\n          </h3>\n        )}\n        <button onClick={playAgain}>Play Again</button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Popup;\n\ntype ContainerProps = {\n  show: boolean;\n};\n\nconst Container = styled.div<ContainerProps>`\n  background-color: rgba(0, 0, 0, 0.3);\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: ${({ show }) => (show ? \"flex\" : \"none\")};\n  align-items: center;\n  justify-content: center;\n\n  div {\n    background: #7d6b91;\n    color: white;\n    border-radius: 5px;\n    box-shadow: 0 15px 10px 3px rgba(0, 0, 0, 0.1);\n    padding: 40px;\n    text-align: center;\n\n    button {\n      cursor: pointer;\n      background-color: #fff;\n      color: #272838;\n      border: 0;\n      margin-top: 20px;\n      padding: 12px 20px;\n      font-size: 16px;\n      &:active {\n        transform: scale(0.98);\n      }\n      &::focus {\n        outline: 0;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header/Header\";\nimport Figure from \"./components/Figure/Figure\";\nimport WrongLetters from \"./components/WrongLetters/WrongLetters\";\nimport Word from \"./components/Word/Word\";\nimport Notification from \"./components/Notification/Notification\";\nimport Popup from \"./components/Popup/Popup\";\nimport { showNotification as show } from \"./helpers/helpers\";\nimport randomWords from \"random-words\";\nimport { useWindowSize } from \"./hooks/useWindowSize\";\n\nlet selectedWord = randomWords();\n\nfunction App() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [playable, setPlayable] = useState<boolean>(true);\n  const [correctLetters, setCorrectLetters] = useState<string[]>([]);\n  const [wrongLetters, setWrongLetters] = useState<string[]>([]);\n  const [showNotification, setShowNotification] = useState<boolean>(false);\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n\n    const handleKeyup = (event: KeyboardEvent) => {\n      //comeback to this and change logic to replace deprecated keyCode property\n      const { key, keyCode } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    //event on hidden input so mobile keyboard always open\n    inputRef.current!.addEventListener(\"keyup\", handleKeyup);\n\n    //focus trap\n    window.addEventListener(\"click\", () => {\n      inputRef.current?.focus();\n    });\n\n    return () => inputRef.current!.removeEventListener(\"keyup\", handleKeyup);\n  }, [correctLetters, wrongLetters, playable, width]);\n\n  const playAgain = () => {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = randomWords();\n  };\n\n  return (\n    <Container>\n      <Header />\n      <GameContainer>\n        <Figure wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n        <HiddenInput type=\"text\" ref={inputRef} />\n        <WrongLetters wrongLetters={wrongLetters} />\n      </GameContainer>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #272838;\n`;\n\nconst GameContainer = styled.div`\n  padding: 20px 30px;\n  position: relative;\n  height: 450px;\n  width: 650px;\n  @media screen and (max-width: 750px) {\n    width: 100vw;\n    height: auto;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  font-size: 20px;\n  position: absolute;\n  height: 20px;\n  width: 5px;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n  opacity: 0;\n`;\n","import { useState, useEffect } from \"react\";\n\ntype Dimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowSize(): Dimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Dimensions>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}